name: Build and Deploy code
on: [push, pull_request]
jobs:
  build:
    environment: testing
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: dio4646
      DATABASE_NAME: post_db_test
      DATABASE_USERNAME: postgres
      SECRET_KEY: 8174d7fe81ea7993d0cd612ac59c1d36634bd3d4246867e2ae1d5cf9480dcbbbe4f05d8dc76c978ea5e09311bb7f8c46550b9049551daf217c974a9f6ae9d5df
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 120
    services:
      postgres:
        image: postgres
        env:
            POSTGRES_PASSWORD: dio4646
            POSTGRES_DB: post_db_test
        ports:
            - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install fastapi pytest pytest-cov sqlalchemy sqlmodel psycopg2-binary

      - name: Test with pytest
        run: pytest
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#            username: ${{ secrets.DOCKER_HUB_USERNAME }}
#            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
#
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: deploying stuff
        run: echo "Deploying stuff"